plugins {
	id "groovy"
	id "maven-publish"
	id "jacoco"
	id "com.jfrog.bintray" version "1.2"
	id "net.researchgate.release" version "2.1.2"
}

repositories {
	jcenter()
}

dependencies {
	compile "org.codehaus.groovy:groovy-all:2.4.3"
	compile "com.mashape.unirest:unirest-java:1.4.5"
	compile "commons-codec:commons-codec:1.10"
	compile "org.tukaani:xz:1.5"
	compile "commons-io:commons-io:2.4"

	testCompile "junit:junit:4.12"
	testCompile "org.assertj:assertj-core:3.0.0"
}

task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = 'sources'
	from sourceSets.main.allSource
}

artifacts {
	archives sourcesJar
}

publishing {
	publications {
		main(MavenPublication) {
			from components.java

			artifact sourcesJar
		}
	}
}

bintray {
	publications = ["main"]
	pkg {
		repo = project.name
		name = project.name
		desc = "Launch Minecraft from the JVM. With a library."
		licenses = ["MIT"]
		vcsUrl = "https://github.com/RX14/jMinecraftLib"
		issueTrackerUrl = "$vcsUrl/issues"
		labels = ["minecraft", "groovy", "library", "launch"]
		version {
			name = project.version
			released = new Date()
			vcsTag = project.version
			gpg.sign = true
		}
	}
}

sourceSets.main.resources { exclude "logging.properties" }

afterReleaseBuild.dependsOn bintrayUpload

jacocoTestReport {
	reports {
		xml.enabled = true
		html.enabled = true
	}
}

test {
	forkEvery = 1
	maxParallelForks = Runtime.getRuntime().availableProcessors();

	testLogging {
		exceptionFormat = 'full'
		showStandardStreams = true
	}

	beforeTest { descriptor ->
		def classPadded = String.format("%-50s", descriptor.className)
		logger.lifecycle("Running test ${classPadded} ${descriptor.name}()")
	}
}
